package org.lizardirc.beancounter;

import java.util.Collections;
import java.util.List;
import java.util.Set;

import com.google.common.collect.ImmutableSet;
import org.pircbotx.PircBotX;
import org.pircbotx.hooks.types.GenericMessageEvent;

import org.lizardirc.beancounter.hooks.CommandHandler;

public class FaceHandler<T extends PircBotX> implements CommandHandler<T> {
    private static final String LOOK_OF_DISAPPROVAL = "LookOfDisapproval";
    private static final String LENNY = "Lenny";
    private static final String FLIP = "TableFLIP";
    private static final String FLIP2 = "FlipTable";
    private static final String RAISE = "Raise";
    private static final Set<String> COMMANDS = ImmutableSet.of(LOOK_OF_DISAPPROVAL, LENNY, FLIP, FLIP2, RAISE);

    private static final String ALPHA = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789[{(<>)}].!'\",&?";
    private static final String AHPLA = "…êq…îp«ù…ü∆É…•·¥â…æ ûl…Øuodb…πs án å çx éz‚àÄ·ó∫∆Ü·ó°∆é‚Ñ≤◊§HI≈ø û‚ÖÇWNO‘ÄŒå·¥öS‚ä•‚à©ŒõMX‚ÖÑZ0∆ñ·ÑÖ∆ê„Ñ£œõ9„Ñ•86]})><({[Àô¬°,‚Äû'‚Öã¬ø";
    //private static final String ALT = "…êp‚ÖΩq”© à…ì¬µ!…æ ûÍûÅwuobd Å∆® á‚à©Ÿ® çx éz·óÑ·ó∑‚äÇDE·ñ∂‚ÖÅHI·òÉ û‚ÖÇ çNOb‚µö·ñâ·¥§‚ä•‚à©‚ãÄMX‚ÖÑZ0123456789";
    //private static final String ALT = "…êq…îp«ù…ü∆É…•ƒ±…æ û◊ü…Øuodb…πs án å çx éz…êq…îp«ù…ü∆É…•ƒ±…æ û◊ü…Øuodb…πs án å çx éz0123456789";
    //private static final String ALT = "68‚±¢95·î≠∆ê210Z‚ÖÑXM·¥ß‚à©‚ä•S·¥öŒå‘ÄO·¥éW‚ÖÇ‚ãä≈øIH‚ÖÅ‚Ñ≤∆é‚óñ‚ÜÉêêí‚àÄz éx ç ån ás…πbdou…Ø É û…æƒ±…•∆É…ü«ùp…îq…ê";
    // ^ some other mappings from other tools that might be helpful

    @Override
    public Set<String> getSubCommands(final GenericMessageEvent<T> event, final List<String> commands) {
        if (commands.isEmpty()) {
            return COMMANDS;
        }
        return Collections.emptySet();
    }

    @Override
    public void handleCommand(final GenericMessageEvent<T> event, final List<String> commands, String remainder) {
        if (!remainder.isEmpty()) {
            remainder = ' ' + remainder.trim();
        }
        switch (commands.get(0)) {
            case LOOK_OF_DISAPPROVAL:
                event.respond("‡≤†_‡≤†" + remainder);
                break;
            case LENNY:
                event.respond("( Õ°¬∞ Õú ñ Õ°¬∞)" + remainder);
                break;
            case FLIP:
            case FLIP2:
                if (remainder.isEmpty()) {
                    remainder = "‚îª‚îÅ‚îª";
                } else {
                    remainder = flip(remainder.trim());
                }
                event.respond("(‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ" + remainder);
                break;
            default:
                remainder = new IllegalArgumentException("Invalid command").toString();
            case RAISE:
                if (remainder.isEmpty()) {
                    remainder = " your dongers";
                }
                event.respond("„ÉΩ‡ºº‡∫àŸÑÕú‡∫à‡ºΩÔæâ raise" + remainder + " „ÉΩ‡ºº‡∫àŸÑÕú‡∫à‡ºΩÔæâ");
                break;
        }
    }

    private static String flip(String input) {
        char[] chars = input.toCharArray();
        for (int i = 0; i < chars.length / 2; i++) {
            char tmp = chars[i];
            chars[i] = chars[chars.length - i - 1];
            chars[chars.length - i - 1] = tmp;
        }

        for (int i = 0; i < chars.length; i++) {
            int index = ALPHA.indexOf(chars[i]);
            if (index >= 0) {
                chars[i] = AHPLA.charAt(index);
            }
        }

        return new String(chars);
    }
}
